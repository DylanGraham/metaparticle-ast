// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/metaparticle-io/metaparticle-ast/models"
)

// CreateOrUpdateServiceReader is a Reader for the CreateOrUpdateService structure.
type CreateOrUpdateServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrUpdateServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateOrUpdateServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewCreateOrUpdateServiceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateOrUpdateServiceOK creates a CreateOrUpdateServiceOK with default headers values
func NewCreateOrUpdateServiceOK() *CreateOrUpdateServiceOK {
	return &CreateOrUpdateServiceOK{}
}

/*CreateOrUpdateServiceOK handles this case with default header values.

OK
*/
type CreateOrUpdateServiceOK struct {
	Payload *models.Service
}

func (o *CreateOrUpdateServiceOK) Error() string {
	return fmt.Sprintf("[PUT /services/{name}][%d] createOrUpdateServiceOK  %+v", 200, o.Payload)
}

func (o *CreateOrUpdateServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Service)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateServiceDefault creates a CreateOrUpdateServiceDefault with default headers values
func NewCreateOrUpdateServiceDefault(code int) *CreateOrUpdateServiceDefault {
	return &CreateOrUpdateServiceDefault{
		_statusCode: code,
	}
}

/*CreateOrUpdateServiceDefault handles this case with default header values.

error
*/
type CreateOrUpdateServiceDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create or update service default response
func (o *CreateOrUpdateServiceDefault) Code() int {
	return o._statusCode
}

func (o *CreateOrUpdateServiceDefault) Error() string {
	return fmt.Sprintf("[PUT /services/{name}][%d] createOrUpdateService default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOrUpdateServiceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
